{"version":3,"sources":["Components/Cards/UserCard/UserCard.module.css","Components/UserAccountInfo/UserAccountInfo.module.css","Containers/Search/Search.module.css","Components/SearchBar/SearchBar.module.css","Components/SearchButton/searchButton.module.css","Containers/SearchResults/SearchResults.module.css","Components/ProfilePicture/ProfilePicture.module.css","Components/Spinner/Spinner.module.css","Containers/UserInfo/UserInfo.module.css","Components/SearchBar/SearchBar.js","Components/SearchButton/searchButton.js","Containers/Search/Search.js","Containers/SearchResults/SearchResults.js","Components/Cards/UserCard/UserCard.js","Components/Spinner/Spinner.js","Components/Error/Error.js","API/github.js","Components/UserAccountInfo/UserAccountInfo.js","Components/Cards/RepositoryCard/RepositoryCard.js","Containers/UserInfo/UserInfo.js","Containers/UserDetails/UserDetails.js","App.js","serviceWorker.js","index.js","Components/Cards/RepositoryCard/RepositoryCard.module.css"],"names":["module","exports","SearchBar","props","type","className","style","placeholder","onChange","changed","SearchButton","onClick","clicked","Search","useState","searchValue","setSearchValue","e","target","value","preventDefault","search","SearchResults","children","UserCard","src","userImage","ProfilePicture","alt","UserName","userName","Spinner","Ripple","Error","axios","create","baseURL","UserAccountInfo","followers","followings","repos","profileImage","location","company","website","accountInfo","setAccountInfo","useEffect","user","githubAPI","get","then","response","data","following","public_repos","avatar_url","blog","UserInfo","WorkInfos","WorkInfo","Stats","StatsCount","StatsText","repositoryCard","RepositoryCard","RepositoryName","name","RepositoryDescription","description","RepositoryInformation","RepositoryLanguage","language","stars","forks","pushTime","repositories","setRepositories","concat","console","log","map","repository","stargazers_count","forks_count","moment","updated_at","format","key","id","UserDetails","initialState","isLoading","searchResults","errorMessage","reducer","state","action","payload","error","App","selectedUser","setSelectedUser","useReducer","dispatch","githubApi","items","catch","exact","path","to","login","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.50f121ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserCard\":\"UserCard_UserCard__BDOBY\",\"ProfilePicture\":\"UserCard_ProfilePicture__3zyvc\",\"UserName\":\"UserCard_UserName__177C8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserAccountInfo\":\"UserAccountInfo_UserAccountInfo__1ShLc\",\"ProfilePicture\":\"UserAccountInfo_ProfilePicture__d8yIq\",\"UserName\":\"UserAccountInfo_UserName__3mzfl\",\"WorkInfo\":\"UserAccountInfo_WorkInfo__2w7Za\",\"UserInfo\":\"UserAccountInfo_UserInfo__nrfLx\",\"Stats\":\"UserAccountInfo_Stats__3v3Cw\",\"StatsCount\":\"UserAccountInfo_StatsCount__3jbPS\",\"StatsText\":\"UserAccountInfo_StatsText__3j7Aq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2Tf2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__2icl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchButton\":\"searchButton_SearchButton__vhM2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchResults\":\"SearchResults_SearchResults__1wGvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfilePicture\":\"ProfilePicture_ProfilePicture__2e5O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ripple\":\"Spinner_Ripple__18gJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserInfo\":\"UserInfo_UserInfo__3JPxK\"};","import React from 'react';\r\nimport style from './SearchBar.module.css';\r\n\r\nconst SearchBar = (props) => {\r\n    return (\r\n        <input type = 'text' className = {style.SearchBar} placeholder = 'Enter a username.' onChange = {props.changed}>\r\n        </input>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react'\r\nimport style from './searchButton.module.css';\r\n\r\nconst SearchButton = props => \r\n    <button className = {style.SearchButton} onClick = {props.clicked}>\r\n        Search\r\n    </button>\r\n\r\n\r\nexport default SearchButton;","import React, { useState } from 'react';\r\nimport style from './Search.module.css'\r\nimport SearchBar from '../../Components/SearchBar/SearchBar'\r\nimport SearchButton from '../../Components/SearchButton/searchButton'\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const userInputHandler = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    const userInputResetHandler = () => {\r\n        setSearchValue('')\r\n    }\r\n\r\n    const userSearchHandler = (e) => {\r\n        e.preventDefault();\r\n        props.search(searchValue)\r\n        userInputResetHandler();\r\n    }\r\n\r\n    return (\r\n        <form className={style.Search}>\r\n            <SearchBar\r\n                changed={userInputHandler}\r\n                value={searchValue} />\r\n\r\n            <SearchButton clicked={userSearchHandler} />\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default Search;","import React from 'react';\r\nimport style from './SearchResults.module.css'\r\n\r\nconst SearchResults = (props) => {\r\n    return (\r\n        <div className = {style.SearchResults}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults","import React from 'react';\r\nimport style from './UserCard.module.css'\r\n\r\nimport ProfilePicture from '../../ProfilePicture/ProfilePicture';\r\n\r\nconst UserCard = (props) => {\r\n    return (\r\n        <div className={style.UserCard} onClick = {props.clicked}>\r\n            <img src={props.userImage} className={style.ProfilePicture} alt='profile' />\r\n            <span className={style.UserName}>{props.userName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserCard;","import React from 'react'\r\nimport style from './Spinner.module.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className = {style.Ripple} ><div>\r\n        </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <span>Sorry there was an error, please try the search again</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.github.com/',\r\n    }\r\n)","import React, { useState, useEffect } from 'react';\r\nimport style from './UserAccountInfo.module.css'\r\nimport githubAPI from '../../API/github';\r\n\r\nconst UserAccountInfo = (props) => {\r\n\r\n    const [accountInfo, setAccountInfo] = useState({\r\n        followers: null,\r\n        followings: null,\r\n        repos: null,\r\n        profileImage: null,\r\n        location: '',\r\n        company: '',\r\n        website: ''\r\n    })\r\n\r\n\r\n\r\n    const userAccountFollowersHandler = user => {\r\n        githubAPI.get(`users/${user}`)\r\n            .then((response => {\r\n                setAccountInfo({\r\n                    followers: response.data.followers,\r\n                    followings: response.data.following,\r\n                    repos: response.data.public_repos,\r\n                    profileImage: response.data.avatar_url,\r\n                    location: response.data.location,\r\n                    company: response.data.company,\r\n                    website: response.data.blog\r\n\r\n                })\r\n                // console.log(response.data)\r\n            }))\r\n    }\r\n\r\n    // console.log(accountInfo)\r\n\r\n    useEffect(() => {\r\n        userAccountFollowersHandler(props.user)\r\n        // console.log(accountInfo)\r\n    }, [])\r\n    // const userFollowingsHandler = null\r\n    // const userRepositoriesHandler = null\r\n\r\n    return (\r\n\r\n        <div className={style.UserAccountInfo}>\r\n\r\n            <div>\r\n                <img src={accountInfo.profileImage} className={style.ProfilePicture} alt=\"\" />\r\n            </div>\r\n\r\n            <div className={style.UserInfo}>\r\n                <span className={style.UserName}>{props.user}</span>\r\n\r\n                <div className={style.WorkInfos}>\r\n                    <div className={style.WorkInfo}>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <span>{accountInfo.company}</span>\r\n                    </div>\r\n\r\n                    <div className={style.WorkInfo}>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <span>{accountInfo.location}</span>\r\n                    </div>\r\n\r\n                    <div className={style.WorkInfo}>\r\n                        <img src=\"\" alt=\"\" />\r\n                        <span>{accountInfo.website}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.Stats}>\r\n                <div>\r\n                    <span className={style.StatsCount}>{accountInfo.followers}</span>\r\n                    <br />\r\n                    <span className={style.StatsText}>followers</span>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <span className={style.StatsCount}>{accountInfo.followings}</span>\r\n                    <br />\r\n                    <span className={style.StatsText}>following</span>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <span className={style.StatsCount}>{accountInfo.repos}</span>\r\n                    <br />\r\n                    <span className={style.StatsText}>Repositories</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserAccountInfo;\r\n\r\n//This can still be further broken down into components yunno","import React from 'react';\r\nimport style from './RepositoryCard.module.css'\r\n\r\nconst repositoryCard = (props) => {\r\n    return (\r\n        <div className={style.RepositoryCard}>\r\n            <span className={style.RepositoryName}>{props.name}</span>\r\n\r\n            <span className={style.RepositoryDescription}>{props.description}</span>\r\n\r\n\r\n            <div className={style.RepositoryInformation}>\r\n                <span className={style.RepositoryLanguage}>{props.language}</span>\r\n\r\n                <div>\r\n                    <span>{props.stars}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{props.forks}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{props.pushTime}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default repositoryCard;","import React, { useState, useEffect } from 'react';\r\nimport style from './UserInfo.module.css';\r\nimport githubAPI from '../../API/github';\r\nimport RepositoryCard from '../../Components/Cards/RepositoryCard/RepositoryCard';\r\nimport moment from 'moment'\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    const [repositories, setRepositories] = useState([])\r\n\r\n    const userRepoHandler = user => {\r\n        githubAPI.get(`users/${user}/repos?sort=updated&direction=desc`)\r\n            .then(response => {\r\n                setRepositories(repositories.concat(response.data))\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        userRepoHandler(props.user)\r\n        return console.log(repositories)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={style.UserInfo}>\r\n            {\r\n                repositories.map(repository => {\r\n                    return <RepositoryCard\r\n                        name={repository.name}\r\n                        description={repository.description}\r\n                        language={repository.language}\r\n                        stars={repository.stargazers_count}\r\n                        forks={repository.forks_count}\r\n                        pushTime={moment(repository.updated_at).format('DD-MMMM-YYYY HH:MM')}\r\n                        key={repository.id}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React from 'react';\r\nimport style from './UserDetails.module.css';\r\nimport UserAccountInfo from '../../Components/UserAccountInfo/UserAccountInfo';\r\nimport UserInfo from '../UserInfo/UserInfo';\r\n\r\nconst UserDetails = (props) => {\r\n    return (\r\n        <div className = {style.UserDetails}>\r\n            <UserAccountInfo user = {props.user}/>\r\n            <UserInfo user = {props.user}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails;","import React, { useReducer, useState } from 'react';\r\nimport Search from './Containers/Search/Search';\r\nimport SearchResults from './Containers/SearchResults/SearchResults';\r\nimport UserCard from './Components/Cards/UserCard/UserCard';\r\nimport Spinner from './Components/Spinner/Spinner';\r\nimport Error from './Components/Error/Error';\r\nimport './App.css';\r\nimport githubApi from './API/github';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport UserDetails from './Containers/UserDetails/UserDetails';\r\n\r\n\r\nconst initialState = {\r\n\tisLoading: false,\r\n\tsearchResults: [],\r\n\terrorMessage: null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'USER_SEARCH_REQUEST':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true,\r\n\t\t\t\terrorMessage: null\r\n\t\t\t};\r\n\r\n\t\tcase 'USER_SEARCH_SUCCESS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tsearchResults: action.payload\r\n\t\t\t};\r\n\r\n\t\tcase 'USER_SEARCH_FAILURE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terrorMessage: action.error\r\n\t\t\t};\r\n\r\n\t\tcase 'GET_SELECTED_USER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n\r\n\t\tdefault: return state\r\n\t}\r\n};\r\n\r\nconst App = () => {\r\n\r\n\tconst [selectedUser, setSelectedUser] = useState('')\r\n\tconst [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n\r\n\tconst userSearch = (searchValue) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'USER_SEARCH_REQUEST'\r\n\t\t});\r\n\r\n\t\tgithubApi.get(`/search/users?q=${searchValue}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'USER_SEARCH_SUCCESS',\r\n\t\t\t\t\tpayload: response.data.items\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\t.catch(\r\n\t\t\t\terror => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'USER_SEARCH_FAILURE',\r\n\t\t\t\t\t\tpayload: error\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t\t\r\n\t\t}\r\n\r\n\tconst { isLoading, searchResults, errorMessage } = state\r\n\r\n\tconst userSelectedHandler = userName => {\r\n\t\tsetSelectedUser(userName);\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Search search={userSearch} />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t<SearchResults>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisLoading && !errorMessage ?\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Spinner /> :\r\n\t\t\t\t\t\t\terrorMessage ? (\r\n\t\t\t\t\t\t\t\t<Error />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\tsearchResults.map(user => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/user/${user.login}`} key={user.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserCard\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserName={user.login}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserImage={user.avatar_url}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclicked={() => userSelectedHandler(user.login)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</SearchResults>\r\n\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/user/:userName' component={() => <UserDetails user={selectedUser} />} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename = '/Github-Search/'>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RepositoryCard\":\"RepositoryCard_RepositoryCard__12x7F\",\"RepositoryName\":\"RepositoryCard_RepositoryName__32cVr\",\"RepositoryDescription\":\"RepositoryCard_RepositoryDescription__2wPyk\",\"RepositoryInformation\":\"RepositoryCard_RepositoryInformation__2pxrE\"};"],"sourceRoot":""}